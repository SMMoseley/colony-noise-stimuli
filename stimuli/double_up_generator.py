import os
import numpy as np
from pathlib import Path
    
# The stimuli used here are copied from SMMoseley/colony-noise-stimuli
# They are assumed to have been generated by make_scenes.py and can be reproduced
in_directory = "/home/bple/stim"
out_directory = "/home/bple/colony-noise-stimuli/stimuli/"

def paddington(song_data, gap=0):    
    note_gap = np.zeros(int(gap*song_data['sampling_rate']), dtype=type(song_data['signal'][0]))
    return np.concatenate((song_data['signal'],note_gap,song_data['signal']))


def get_interval(path, dtype):
    with ewave.open(path, "r") as fp:
        rate = fp.sampling_rate
        data = fp.read()
        rescaled_data = ewave.rescale(data, dtype)
        return {"signal": rescaled_data,"sampling_rate":rate}


for subfoldname in os.listdir(in_directory):
    subfold = os.path.join(in_directory, subfoldname)
    for file in os.listdir(subfold):
        path = os.path.join(subfold, file)
        print(file,':')
        song_data = get_interval(path, dtype=np.int16)
        song_data['signal'] = paddington(song_data, gap=0.2)
        
        out_name = file.split('.')[0] + '_padded.wav'
        out_file = os.path.join(out_directory,subfoldname,out_name)
        Path(out_file).parent.mkdir(exist_ok=True, parents=True)
        with ewave.open(
            out_file, mode="w+", sampling_rate=song_data["sampling_rate"], dtype=np.int16
        ) as fp:
            fp.write(song_data["signal"])
        print(f" - wrote data to {out_file}")